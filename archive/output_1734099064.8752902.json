{"content": {"suites": {"0": {"status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}, "tests": {"0": {"status": "ERROR", "message": "request = <SubRequest 'driver' for <Function test_login>>\n\n    @pytest.fixture(scope=\"module\")\n    def driver(request):\n        platform = request.config.getoption(\"--platform\")\n>       driver_instance = Driver.create_driver(platform)\n\ntests/test_login.py:9: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\napp_driver/driver_setup.py:27: in create_driver\n    capabilities = Config.get_capabilities(platform)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nplatform = '=android'\n\n    @staticmethod\n    def get_capabilities(platform: str):\n        \"\"\"\n        Fetches capabilities for the specified platform.\n    \n        Args:\n            platform (str): The platform name ('android' or 'ios').\n    \n        Returns:\n            dict: A dictionary of capabilities for the platform.\n    \n        Raises:\n            ValueError: If the platform is not supported or capabilities are missing.\n        \"\"\"\n        logger.debug(f\"Fetching capabilities for platform: {platform}\")\n        if platform not in Config.CONFIG:\n            logger.error(f\"Invalid platform: {platform}. Supported platforms are: {list(Config.CONFIG.keys())}\")\n>           raise ValueError(f\"Invalid platform: {platform}\")\nE           ValueError: Invalid platform: =android\n\nconfig/config.py:43: ValueError\n", "test_name": "test_login", "rerun": "0"}}, "suite_name": "tests/test_login.py"}}}, "date": "December 13, 2024", "start_time": 1734099057.8100102, "total_suite": 1, "status": "FAIL", "status_list": {"pass": "0", "fail": "0", "skip": "0", "error": "1", "xpass": "0", "xfail": "0", "rerun": "0"}, "total_tests": "1"}